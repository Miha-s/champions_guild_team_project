add_test([=[LexerTest.NumberParsing]=]  /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests/LexerTest [==[--gtest_filter=LexerTest.NumberParsing]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LexerTest.NumberParsing]=]  PROPERTIES WORKING_DIRECTORY /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LexerTest.StringParsing]=]  /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests/LexerTest [==[--gtest_filter=LexerTest.StringParsing]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LexerTest.StringParsing]=]  PROPERTIES WORKING_DIRECTORY /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LexerTest.OperatorParsing]=]  /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests/LexerTest [==[--gtest_filter=LexerTest.OperatorParsing]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LexerTest.OperatorParsing]=]  PROPERTIES WORKING_DIRECTORY /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AlgoTest.FUCKING_FIRST_2_TEST]=]  /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests/LexerTest [==[--gtest_filter=AlgoTest.FUCKING_FIRST_2_TEST]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AlgoTest.FUCKING_FIRST_2_TEST]=]  PROPERTIES WORKING_DIRECTORY /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[AlgoTest.FUCKING_FOLLOW_1_TEST]=]  /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests/LexerTest [==[--gtest_filter=AlgoTest.FUCKING_FOLLOW_1_TEST]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AlgoTest.FUCKING_FOLLOW_1_TEST]=]  PROPERTIES WORKING_DIRECTORY /Users/user/unv/champions_guild_team_project/cmake-build-debug/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  LexerTest_TESTS LexerTest.NumberParsing LexerTest.StringParsing LexerTest.OperatorParsing AlgoTest.FUCKING_FIRST_2_TEST AlgoTest.FUCKING_FOLLOW_1_TEST)
